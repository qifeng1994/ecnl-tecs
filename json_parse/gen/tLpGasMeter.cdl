signature sLpGasMeter {
    void setMaximumValueOfSupplyPressureData( );
    void setMinimumValueOfSupplyPressureData( );
    void setCurrentValueOfSupplyPressureData( );
    void setMaximumValueOfBlockPressureData( );
    void setMinimumValueOfBlockPressureData( );
    void setCurrentValueOfBlockPressureData( );
    void setTestCallSetting_Yes( );
    void setTestCallSetting_No( );
    void setCumulativeAmountOfGasConsumptionOfMeteringData1( );
    void setCumulativeAmountOfGasConsumptionOfMeteringData2( );
    void setErrorDetectionStatusOfMeteringData_Yes( );
    void setErrorDetectionStatusOfMeteringData_No( );
    void setCenterValveShutOffStatus_Yes( );
    void setCenterValveShutOffStatus_No( );
    void setCenterValveShutOffRecoveryPermissionSettingStatus_Yes( );
    void setCenterValveShutOffRecoveryPermissionSettingStatus_No( );
    void setEmergencyValveShutOffStatus_Yes( );
    void setEmergencyValveShutOffStatus_No( );
    void setShutOffValveOpenCloseStatus_Yes( );
    void setShutOffValveOpenCloseStatus_No( );
    void setResidualVolumeControlWarning_ResidualVolumeControlWarningLevel1( );
    void setResidualVolumeControlWarning_ResidualVolumeControlWarningLevel2( );
    void setResidualVolumeControlWarning_ResidualVolumeControlWarningLevel3( );
    void setResidualVolumeControlWarning_NoResidualVolumeControlWarning( );
    void setSlightLeakTimerValue(gasFlowRateContinuation)( );
    void setSlightLeakTimerValue(withoutPressureIncrease)( );
};
