signature sElectricallyOperatedBlindShade {
    void setTimerOperationSetting_On( );
    void setTimerOperationSetting_Off( );
    void setWindDetectionStatus_Yes( );
    void setWindDetectionStatus_No( );
    void setSunlightDetectionStatus_Yes( );
    void setSunlightDetectionStatus_No( );
    void setOpening(extention)SpeedSetting_Low( );
    void setOpening(extention)SpeedSetting_Middle( );
    void setOpening(extention)SpeedSetting_High( );
    void setClosing(retraction)SpeedSetting_Low( );
    void setClosing(retraction)SpeedSetting_Middle( );
    void setClosing(retraction)SpeedSetting_High( );
    void setOperationTime( );
    void setAutomaticOperationSetting_On( );
    void setAutomaticOperationSetting_Off( );
    void setOpenClose(extensionRetraction)Setting_Open( );
    void setOpenClose(extensionRetraction)Setting_Close( );
    void setOpenClose(extensionRetraction)Setting_Stop( );
    void setDegreeOfOpeningLevel( );
    void setShadeAngleSetting( );
    void setOpenClose(extensionRetraction)SpeedSetting_Low( );
    void setOpenClose(extensionRetraction)SpeedSetting_Middle( );
    void setOpenClose(extensionRetraction)SpeedSetting_High( );
    void setElectricLockSetting_Lock( );
    void setElectricLockSetting_Unlock( );
    void setRemoteOperationSettingStatus_On(permitted)( );
    void setRemoteOperationSettingStatus_Off(prohibited)( );
    void setSelectiveOpening(extention)OperationSetting_DegreeOfSettingPosition:Open( );
    void setSelectiveOpening(extention)OperationSetting_OperationTimeSettingValue:Open( );
    void setSelectiveOpening(extention)OperationSetting_OperationTimeSettingValue:Close( );
    void setSelectiveOpening(extention)OperationSetting_LocalSettingPosition( );
    void setOpenClosed(extensionRetraction)Status_FullyOpen( );
    void setOpenClosed(extensionRetraction)Status_FullyClosed( );
    void setOpenClosed(extensionRetraction)Status_Open( );
    void setOpenClosed(extensionRetraction)Status_Closed( );
    void setOpenClosed(extensionRetraction)Status_StoppedHalfway( );
    void setOneTimeOpening(extension)SpeedSetting_Low( );
    void setOneTimeOpening(extension)SpeedSetting_Middle( );
    void setOneTimeOpening(extension)SpeedSetting_High( );
    void setOneTimeOpening(extension)SpeedSetting_None( );
    void setOneTimeClosing(retraction)SpeedSetting_Low( );
    void setOneTimeClosing(retraction)SpeedSetting_Middle( );
    void setOneTimeClosing(retraction)SpeedSetting_High( );
    void setOneTimeClosing(retraction)SpeedSetting_None( );
};
