#class OptionParserの使い方

#参考：https://portaltan.hatenablog.com/entry/2015/07/15/172325
流れ：
    1. OptionParser オブジェクト opt を生成する。
    2. オプションを取り扱うブロックを opt に登録する。
    3. opt.parse(ARGV) でコマンドラインを実際に parse する。

例1：
require 'optparse'

#OptionParser オブジェクト opt を生成する。
opt = OptionParser.new

options = {}
opt.on("-f" ,"--foo", "引数なしだよ"){|v| options[:f] = v}
opt.on("-b", "--bar <param>", "引数ありだよ") {|v| options[:bar] = v}

opt.banner="usage:#{File.basename($0)} -f --bar [value]"
opt.on("-h", "--help", "Show this message") { puts opt; exit }

opt.parse!(ARGV)
puts options

例2：无参数
require 'optparse'
opt = OptionParser.new
opt.on('-a', '--add', 'add an item') { puts 'Added' }
opt.on('-d', '--del', 'delete an item') { puts 'Deleted' }
opt.parse(ARGV)

$ ruby sample.rb -a -d 

例3：传参
require 'optparse'
opt = OptionParser.new
opt.on('-a', '--add ITEM', 'add an item') { |v| puts "Add #{v}" }
opt.on('-d', '--del ITEM', 'delete an item') { |v| puts "Delete #{v}" }
opt.parse(ARGV)

例：另一种写法
require 'optparse'
opt = OptionParser.new
opt.on('-a', '--add ITEM', 'add an item') do |v|
    puts "Add #{v}"
end
opt.on('-d', '--del ITEM', 'delete an item') do |v|
    puts "Delete #{v}"
end
opt.parse(ARGV)

$ ruby sample.rb -a 100 -a 200 -d 300

例4：参数可省略
require 'optparse'
opt = OptionParser.new
opt.on('-a', '--add [ITEM]', 'add an item') do |val|
  if val != nil
    puts "Add #{val}"
  else
    puts "Add something"
  end
end
opt.parse(ARGV)



考え：
  read file using command line in ruby 
  参考上面的例子修改现有的代码写法
